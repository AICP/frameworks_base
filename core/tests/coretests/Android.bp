package {
    // See: http://go/android-license-faq
    // A large-scale-change added 'default_applicable_licenses' to import
    // all of the 'license_kinds' from "frameworks_base_license"
    // to get the below license kinds:
    //   SPDX-license-identifier-Apache-2.0
    default_applicable_licenses: ["frameworks_base_license"],
}

filegroup {
    name: "FrameworksCoreTests-aidl",
    srcs: [
        "src/**/I*.aidl",
        "aidl/**/I*.aidl",
    ],
    visibility: ["//visibility:private"],
}

filegroup {
    name: "FrameworksCoreTests-helpers",
    srcs: [
        "DisabledTestApp/src/**/*.java",
        "EnabledTestApp/src/**/*.java",
        "BinderProxyCountingTestApp/src/**/*.java",
        "BinderProxyCountingTestService/src/**/*.java",
        "BinderDeathRecipientHelperApp/src/**/*.java",
    ],
    visibility: ["//visibility:private"],
}

java_defaults {
    name: "FrameworksCoreTests-resources",
    aaptflags: [
        "-0 .dat",
        "-0 .gld",
        "-c fa",
    ],
    resource_dirs: ["res"],
}

android_test {
    name: "FrameworksCoreTests",
    defaults: ["FrameworksCoreTests-resources"],

    srcs: [
        "src/**/*.java",
        "src/**/*.kt",
        ":FrameworksCoreTests-aidl",
        ":FrameworksCoreTests-helpers",
        ":FrameworksCoreTestDoubles-sources",
    ],

    aidl: {
        generate_get_transaction_name: true,
        local_include_dirs: ["aidl"],
    },

    dxflags: ["--core-library"],

    aaptflags: [
        "-0 .dat",
        "-0 .gld",
        "-c fa",
    ],
    static_libs: [
        "collector-device-lib-platform",
        "frameworks-base-testutils",
        "core-test-rules", // for libcore.dalvik.system.CloseGuardSupport
        "core-tests-support",
        "android-common",
        "frameworks-core-util-lib",
        "mockwebserver",
        "guava",
        "android.app.usage.flags-aconfig-java",
        "android.view.accessibility.flags-aconfig-java",
        "androidx.core_core",
        "androidx.core_core-ktx",
        "androidx.test.core",
        "androidx.test.espresso.core",
        "androidx.test.ext.junit",
        "androidx.test.runner",
        "androidx.test.rules",
        "flag-junit",
        "junit-params",
        "kotlin-test",
        "mockito-target-minus-junit4",
        "androidx.test.uiautomator_uiautomator",
        "platform-test-annotations",
        "platform-compat-test-rules",
        "truth",
        "print-test-util-lib",
        "testng",
        "servicestests-utils",
        "device-time-shell-utils",
        "testables",
        "com.android.text.flags-aconfig-java",
        "flag-junit",
        "ravenwood-junit",
        "perfetto_trace_java_protos",
        "flickerlib-parsers",
        "flickerlib-trace_processor_shell",
        "mockito-target-extended-minus-junit4",
        "TestParameterInjector",
    ],

    libs: [
        "android.test.runner",
        "org.apache.http.legacy",
        "android.test.base",
        "android.test.mock",
        "framework",
        "ext",
        "framework-res",
        "android.view.flags-aconfig-java",
    ],
    jni_libs: [
        "libpowermanagertest_jni",
        "libworksourceparceltest_jni",
    ],

    sdk_version: "core_platform",
    test_suites: [
        "device-tests",
        "automotive-tests",
    ],

    certificate: "platform",

    resource_zips: [":FrameworksCoreTests_apks_as_resources"],
    java_resources: [":FrameworksCoreTests_unit_test_cert_der"],

    data: [
        ":BinderDeathRecipientHelperApp1",
        ":BinderDeathRecipientHelperApp2",
        ":com.android.cts.helpers.aosp",
    ],
}

// FrameworksCoreTestsRavenwood pulls in the R.java class from this one.
// Note, "FrameworksCoreTests" and "FrameworksCoreTests-resonly" _might_ not have indentical
// R.java (not sure if there's a guarantee), but that doesn't matter as long as
// FrameworksCoreTestsRavenwood consistently uses the R definition in this module.
android_app {
    name: "FrameworksCoreTests-resonly",
    defaults: ["FrameworksCoreTests-resources"],

    // FrameworksCoreTestsRavenwood references the .aapt.srcjar
    use_resource_processor: false,
    libs: [
        "framework-res",
        "android.test.runner",
        "org.apache.http.legacy",
    ],
    sdk_version: "core_platform",
}

// Rules to copy all the test apks to the intermediate raw resource directory
java_genrule {
    name: "FrameworksCoreTests_apks_as_resources",
    srcs: [
        ":FrameworksCoreTests_install_jni_lib_open_from_apk",
        ":FrameworksCoreTests_install_verifier_bad",
        ":FrameworksCoreTests_install_verifier_good",
        ":FrameworksCoreTests_locales",
        ":FrameworksCoreTests_overlay_config",
        ":FrameworksCoreTests_version_1",
        ":FrameworksCoreTests_version_1_diff",
        ":FrameworksCoreTests_version_1_nosys",
        ":FrameworksCoreTests_version_2",
        ":FrameworksCoreTests_version_2_diff",
        ":FrameworksCoreTests_version_3",
    ],
    out: ["FrameworkCoreTests_apks_as_resources.res.zip"],
    tools: ["soong_zip"],

    cmd: "mkdir -p $(genDir)/res/raw && " +
        "for i in $(in); do " +
        "  x=$${i##*FrameworksCoreTests_}; echo $${x}; cp $$i $(genDir)/res/raw/$${x%.apk};" +
        "done && " +
        "$(location soong_zip) -o $(out) -C $(genDir)/res -D $(genDir)/res",
}

// In addition to running as part of FrameworksCoreTests, we run (a subclass of)
// ChooserActivityTest against the unbundled ChooserActivity implementation in
// //packages/modules/IntentResolver/. The following library provides the
// minimum dependencies required to build that test in the unbundled package.
android_library {
    name: "ChooserActivityTestsLib",
    visibility: ["//packages/modules/IntentResolver/java/tests:__pkg__"],

    srcs: [
        "src/com/android/internal/app/ChooserActivityLoggerFake.java",
        "src/com/android/internal/app/ChooserActivityOverrideData.java",
        "src/com/android/internal/app/ChooserActivityTest.java",
        "src/com/android/internal/app/ChooserWrapperActivity.java",
        "src/com/android/internal/app/IChooserWrapper.java",
        "src/com/android/internal/app/MatcherUtils.java",
        "src/com/android/internal/app/ResolverDataProvider.java",
    ],

    static_libs: [
        "androidx.test.espresso.core",
        "androidx.test.ext.junit",
        "androidx.test.runner",
        "androidx.test.rules",
        "mockito-target-minus-junit4",
        "truth",
    ],

    libs: [
        "android.test.runner",
        "android.test.base",
        "android.test.mock",
        "framework",
        "framework-res",
    ],
}

android_ravenwood_test {
    name: "FrameworksCoreTestsRavenwood",
    libs: [
        "android.test.runner",
        "android.test.base",
    ],
    static_libs: [
        "core-test-rules", // for libcore.dalvik.system.CloseGuardSupport
        "androidx.core_core",
        "androidx.annotation_annotation",
        "androidx.test.rules",
        "androidx.test.ext.junit",
        "androidx.test.uiautomator_uiautomator",
        "compatibility-device-util-axt",
        "flag-junit",
        "platform-test-annotations",
        "flag-junit",
        "testng",
    ],
    srcs: [
        "src/android/app/ActivityManagerTest.java",
        "src/android/content/ContextTest.java",
        "src/android/content/pm/PackageManagerTest.java",
        "src/android/content/pm/UserInfoTest.java",
        "src/android/database/CursorWindowTest.java",
        "src/android/os/**/*.java",
        "src/android/telephony/PinResultTest.java",
        "src/android/util/**/*.java",
        "src/android/view/DisplayTest.java",
        "src/android/view/DisplayInfoTest.java",
        "src/com/android/internal/logging/**/*.java",
        "src/com/android/internal/os/**/*.java",
        "src/com/android/internal/util/**/*.java",
        "src/com/android/internal/power/EnergyConsumerStatsTest.java",

        // Pull in R.java from FrameworksCoreTests-resonly, not from FrameworksCoreTests,
        // to avoid having a dependency to FrameworksCoreTests.
        // This way, when updating source files and running this test, we don't need to
        // rebuild the entire FrameworksCoreTests, which would be slow.
        ":FrameworksCoreTests-resonly{.aapt.srcjar}",
        ":FrameworksCoreTests-aidl",
        ":FrameworksCoreTests-helpers",
        ":FrameworksCoreTestDoubles-sources",
    ],
    aidl: {
        generate_get_transaction_name: true,
        local_include_dirs: ["aidl"],
    },
    auto_gen_config: true,
}
